/*
Rate Limit API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the SuccessfulResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SuccessfulResponse{}

// SuccessfulResponse struct for SuccessfulResponse
type SuccessfulResponse struct {
	BookName   *string `json:"book-name,omitempty"`
	LineNumber *int32  `json:"line-number,omitempty"`
	Text       *string `json:"text,omitempty"`
}

// NewSuccessfulResponse instantiates a new SuccessfulResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSuccessfulResponse() *SuccessfulResponse {
	this := SuccessfulResponse{}
	return &this
}

// NewSuccessfulResponseWithDefaults instantiates a new SuccessfulResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSuccessfulResponseWithDefaults() *SuccessfulResponse {
	this := SuccessfulResponse{}
	return &this
}

// GetBookName returns the BookName field value if set, zero value otherwise.
func (o *SuccessfulResponse) GetBookName() string {
	if o == nil || IsNil(o.BookName) {
		var ret string
		return ret
	}
	return *o.BookName
}

// GetBookNameOk returns a tuple with the BookName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuccessfulResponse) GetBookNameOk() (*string, bool) {
	if o == nil || IsNil(o.BookName) {
		return nil, false
	}
	return o.BookName, true
}

// HasBookName returns a boolean if a field has been set.
func (o *SuccessfulResponse) HasBookName() bool {
	if o != nil && !IsNil(o.BookName) {
		return true
	}

	return false
}

// SetBookName gets a reference to the given string and assigns it to the BookName field.
func (o *SuccessfulResponse) SetBookName(v string) {
	o.BookName = &v
}

// GetLineNumber returns the LineNumber field value if set, zero value otherwise.
func (o *SuccessfulResponse) GetLineNumber() int32 {
	if o == nil || IsNil(o.LineNumber) {
		var ret int32
		return ret
	}
	return *o.LineNumber
}

// GetLineNumberOk returns a tuple with the LineNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuccessfulResponse) GetLineNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.LineNumber) {
		return nil, false
	}
	return o.LineNumber, true
}

// HasLineNumber returns a boolean if a field has been set.
func (o *SuccessfulResponse) HasLineNumber() bool {
	if o != nil && !IsNil(o.LineNumber) {
		return true
	}

	return false
}

// SetLineNumber gets a reference to the given int32 and assigns it to the LineNumber field.
func (o *SuccessfulResponse) SetLineNumber(v int32) {
	o.LineNumber = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *SuccessfulResponse) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SuccessfulResponse) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *SuccessfulResponse) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *SuccessfulResponse) SetText(v string) {
	o.Text = &v
}

func (o SuccessfulResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SuccessfulResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BookName) {
		toSerialize["book-name"] = o.BookName
	}
	if !IsNil(o.LineNumber) {
		toSerialize["line-number"] = o.LineNumber
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	return toSerialize, nil
}

type NullableSuccessfulResponse struct {
	value *SuccessfulResponse
	isSet bool
}

func (v NullableSuccessfulResponse) Get() *SuccessfulResponse {
	return v.value
}

func (v *NullableSuccessfulResponse) Set(val *SuccessfulResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSuccessfulResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSuccessfulResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSuccessfulResponse(val *SuccessfulResponse) *NullableSuccessfulResponse {
	return &NullableSuccessfulResponse{value: val, isSet: true}
}

func (v NullableSuccessfulResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSuccessfulResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
