/*
 * Rate Limit API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

import (
	"context"
	"errors"
	"net/http"
)

// ErrorsApiService is a service that implements the logic for the ErrorsApiServicer
// This service should implement the business logic for every endpoint for the ErrorsApi API.
// Include any external packages or services that will be required by this service.
type ErrorsApiService struct{}

// NewErrorsApiService creates a default api service
func NewErrorsApiService() ErrorsApiServicer {
	return &ErrorsApiService{}
}

// ErrorsPercentGet - An API that will return an error \&quot;error_percent\&quot; percent of the time
func (s *ErrorsApiService) ErrorsPercentGet(ctx context.Context, errorPercent int32) (ImplResponse, error) {
	// TODO - update ErrorsPercentGet with the required logic for this service method.
	// Add api_errors_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ErrorsPercentGet method not implemented")
}
